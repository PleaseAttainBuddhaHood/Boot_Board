
buildscript
{
    ext
    {
        queryDslVersion = "5.0.0"
    }
}



plugins
{
    id 'base'
    id 'java'
    id 'org.springframework.boot' version '2.7.9'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.boot_board'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations
{
    compileOnly
    {
        extendsFrom annotationProcessor
    }
}

repositories
{
    mavenCentral()
}

dependencies
{
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'


    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 타임리프 레이아웃
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.2.0'

    // Querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor(
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

    // ModelMapper
    implementation 'org.modelmapper:modelmapper:3.1.1'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // REST 방식 API 테스트용
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    // 썸네일
    implementation 'net.coobird:thumbnailator:0.4.19'

    // 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'


}

tasks.named('test')
{
    useJUnitPlatform()
}

sourceSets
{
    main
    {
        java
        {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}


compileJava.dependsOn('clean')